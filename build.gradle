import org.springframework.boot.gradle.tasks.bundling.BootJar

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.diffplug.spotless' version '7.2.1'
    id 'org.sonarqube' version '6.2.0.5505'
    id 'maven-publish'
}

sonar {
    properties {
        property 'sonar.projectKey', 'ryhaldenys_actions-demo'
        property 'sonar.organization', 'ryhaldenys'
        property 'sonar.host.url', 'https://sonarcloud.io'
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.coverage.jacoco.xmlReportPaths", file("${projectDir}/config/build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml")

    }
}

allprojects {
    group = 'ua.studying'
    version = '1.0.8'

    repositories {
        mavenCentral()
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    tasks.withType(BootJar).configureEach {
        enabled = false
    }

}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.diffplug.spotless'
    apply plugin: 'jacoco'
    apply plugin: "maven-publish"

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
        testCompileOnly {
            extendsFrom testAnnotationProcessor
        }
    }

    spotless {
        java {
            googleJavaFormat()
            removeUnusedImports()
            trimTrailingWhitespace()
            removeWildcardImports()
            endWithNewline()
        }
    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport

        testLogging {
            events 'passed', 'skipped', 'failed'
            showStandardStreams = true
            exceptionFormat = 'short'
        }
    }

    jacocoTestReport {
        dependsOn test

        reports {
            xml.required = true
            csv.required = false
            html.required = false
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'

        annotationProcessor 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
}
